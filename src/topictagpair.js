export const topics = [
  'graph',
  'array',
  'trees',
  'sorting',
  'searching',
  'linked list',
  'queue',
  'hashing',
  'stack',
  'recursion',
]
export const pair = new Map([
  ['Dijkstra', 'graph'],
  ['array', 'array'],
  ['avl_tree', 'trees'],
  ['bellmann', 'graph'],
  ['bfs', 'graph'],
  ['binary_search', 'searching'],
  ['bst', 'trees'],
  ['circular_linked_list', 'linked list'],
  ['circular_queue', 'queue'],
  ['dequeue', 'queue'],
  ['dfs', 'graph'],
  ['graph', 'graph'],
  ['hash_table', 'hashing'],
  ['heap', 'trees'],
  ['insertion_sort', 'sorting'],
  ['kruskal', 'graph'],
  ['linked_list', 'linked list'],
  ['merge_sort', 'sorting'],
  ['prim', 'graph'],
  ['priority_queue', 'queue'],
  ['queue', 'queue'],
  ['quick_sort', 'sorting'],
  ['recursion', 'recursion'],
  ['red_black_tree', 'trees'],
  ['search', 'searching'],
  ['searching', 'searching'],
  ['selection_sort', 'sorting'],
  ['sort', 'sorting'],
  ['sorting', 'sorting'],
  ['stack', 'stack'],
  ['topological_sort', 'graph'],
  ['tree', 'trees'],
])

export const gettagfromtopic = new Map([
  ['Array', 'array'],
  ['Avl tree', 'avl_tree'],
  ['Bellman–Ford', 'bellmann'],
  ['BFS', 'bfs'],
  ['Binary Search', 'binary_search'],
  ['Binary Search Tree', 'bst'],
  ['Circular Linked List', 'circular_linked_list'],
  ['Circular Queue', 'circular_queue'],
  ['Dequeue', 'dequeue'],
  ['Depth First Search', 'dfs'],
  ['Graph', 'graph'],
  ['Hash Table', 'hash_table'],
  ['Heap Sort', 'heap'],
  ['Insertion Sort', 'insertion_sort'],
  ['Kruskal’s Algorithm', 'kruskal'],
  ['Linked List', 'linked_list'],
  ['Merge Sort', 'merge_sort'],
  ['Prim’s Algorithm', 'prim'],
  ['Prioeity Queue', 'priority_queue'],
  ['Red-Black-Tree', 'red_black_tree'],
  ['Topological Sorting', 'topological_sort'],
  ['Stack', 'stack'],
  ['Binary Tree', 'tree'],
])
